variable "direct_role_grants" {
  description = "List of roles granted directly to project administrators."
  type        = list(string)
  default = [
    "roles/artifactregistry.admin",
    "roles/bigquery.admin",
    "roles/bigquery.admin",
    "roles/composer.admin",
    "roles/composer.worker",
    "roles/cloudfunctions.admin",
    "roles/cloudkms.admin",
    "roles/cloudkms.cryptoKeyDecrypter",
    "roles/cloudkms.verifier",
    "roles/cloudkms.cryptoOperator",
    "roles/cloudkms.importer",
    "roles/cloudkms.cryptoKeyEncrypterViaDelegation",
    "roles/cloudkms.expertRawPKCS1",
    "roles/cloudkms.signer",
    "roles/cloudkms.cryptoKeyDecrypterViaDelegation",
    "roles/cloudkms.cryptoKeyEncrypter",
    "roles/cloudkms.cryptoKeyEncrypterDecrypter",
    "roles/cloudkms.signerVerifier",
    "roles/cloudkms.cryptoKeyEncrypterDecrypterViaDelegation",
    "roles/cloudkms.publicKeyViewer",
    "roles/cloudsql.admin",
    "roles/storage.admin",
    "roles/storagetransfer.admin",
    "roles/containeranalysis.admin",
    "roles/datacatalog.admin",
    "roles/dataproc.admin",
    "roles/compute.admin",
    "roles/container.admin",
    "roles/gkebackup.admin",
    "roles/iam.serviceAccountAdmin",
    "roles/iam.serviceAccountCreator",
    "roles/iam.serviceAccountDeleter",
    "roles/iam.serviceAccountUser",
    "roles/logging.admin",
    "roles/monitoring.admin",
    "roles/pubsub.admin",
    "roles/secretmanager.admin"
  ]
}

variable "delegated_role_grants" {
  description = "List of roles that project administrators will be allowed to grant/revoke."
  type        = list(string)
  default = [
    "roles/artifactregistry.reader",
    "roles/artifactregistry.repoAdmin",
    "roles/artifactregistry.writer",
    "roles/bigquery.connectionUser",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataViewer",
    "roles/bigquery.filteredDataViewer",
    "roles/bigquery.jobUser",
    "roles/bigquery.metadataViewer",
    "roles/bigquery.readSessionUser",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/bigquerydatapolicy.maskedReader",
    "roles/bigquerymigration.editor",
    "roles/bigquerymigration.orchestrator",
    "roles/bigquerymigration.translationUser",
    "roles/bigquerymigration.viewer",
    "roles/bigquerymigration.worker",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.invoker",
    "roles/cloudfunctions.viewer",
    "roles/cloudkms.cryptoKeyDecrypter",
    "roles/cloudkms.cryptoKeyDecrypterViaDelegation",
    "roles/cloudkms.cryptoKeyEncrypter",
    "roles/cloudkms.cryptoKeyEncrypterDecrypter",
    "roles/cloudkms.cryptoKeyEncrypterDecrypterViaDelegation",
    "roles/cloudkms.cryptoKeyEncrypterViaDelegation",
    "roles/cloudkms.cryptoOperator",
    "roles/cloudkms.expertRawPKCS1",
    "roles/cloudkms.importer",
    "roles/cloudkms.publicKeyViewer",
    "roles/cloudkms.signer",
    "roles/cloudkms.signerVerifier",
    "roles/cloudkms.verifier",
    "roles/cloudkms.viewer",
    "roles/cloudsql.admin",
    "roles/cloudsql.client",
    "roles/cloudsql.editor",
    "roles/cloudsql.instanceUser",
    "roles/cloudsql.viewer",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/compute.imageUser",
    "roles/compute.loadBalancerServiceUser",
    "roles/compute.osAdminLogin",
    "roles/compute.osLogin",
    "roles/compute.publicIpAdmin",
    "roles/compute.soleTenantViewer",
    "roles/compute.viewer",
    "roles/container.admin",
    "roles/container.clusterAdmin",
    "roles/container.clusterViewer",
    "roles/container.developer",
    "roles/container.viewer",
    "roles/containeranalysis.notes.attacher",
    "roles/containeranalysis.notes.editor",
    "roles/containeranalysis.notes.occurrences.viewer",
    "roles/containeranalysis.notes.viewer",
    "roles/containeranalysis.occurrences.editor",
    "roles/containeranalysis.occurrences.viewer",
    "roles/containersecurity.viewer",
    "roles/datacatalog.categoryFineGrainedReader",
    "roles/datacatalog.entryGroupCreator",
    "roles/datacatalog.entryViewer",
    "roles/datacatalog.tagEditor",
    "roles/datacatalog.tagTemplateCreator",
    "roles/datacatalog.tagTemplateUser",
    "roles/datacatalog.tagTemplateViewer",
    "roles/datacatalog.viewer",
    "roles/dataproc.editor",
    "roles/dataproc.hubAgent",
    "roles/dataproc.viewer",
    "roles/gkebackup.delegatedBackupAdmin",
    "roles/gkebackup.delegatedRestoreAdmin",
    "roles/gkebackup.viewer",
    "roles/gkehub.connect",
    "roles/gkehub.editor",
    "roles/gkehub.gatewayReader",
    "roles/gkehub.viewer",
    "roles/gkemulticloud.admin",
    "roles/gkemulticloud.telemetryWriter",
    "roles/gkemulticloud.viewer",
    "roles/gkeonprem.viewer",
    "roles/iam.securityReviewer",
    "roles/iam.serviceAccountTokenCreator",
    "roles/iam.serviceAccountCreator",
    "roles/iam.serviceAccountUser",
    "roles/iam.serviceAccountViewer",
    "roles/logging.admin",
    "roles/logging.bucketWriter",
    "roles/logging.configWriter",
    "roles/logging.fieldAccessor",
    "roles/logging.logWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewAccessor",
    "roles/logging.viewer",
    "roles/monitoring.admin",
    "roles/monitoring.alertPolicyEditor",
    "roles/monitoring.alertPolicyViewer",
    "roles/monitoring.dashboardEditor",
    "roles/monitoring.dashboardViewer",
    "roles/monitoring.editor",
    "roles/monitoring.metricsScopesAdmin",
    "roles/monitoring.metricsScopesViewer",
    "roles/monitoring.metricWriter",
    "roles/monitoring.notificationChannelEditor",
    "roles/monitoring.notificationChannelViewer",
    "roles/monitoring.servicesEditor",
    "roles/monitoring.servicesViewer",
    "roles/monitoring.uptimeCheckConfigEditor",
    "roles/monitoring.uptimeCheckConfigViewer",
    "roles/monitoring.viewer",
    "roles/osconfig.instanceOSPoliciesComplianceViewer",
    "roles/osconfig.inventoryViewer",
    "roles/osconfig.osPolicyAssignmentAdmin",
    "roles/osconfig.osPolicyAssignmentEditor",
    "roles/osconfig.osPolicyAssignmentReportViewer",
    "roles/osconfig.osPolicyAssignmentViewer",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/osconfig.patchDeploymentViewer",
    "roles/osconfig.patchJobExecutor",
    "roles/osconfig.patchJobViewer",
    "roles/osconfig.vulnerabilityReportViewer",
    "roles/pubsub.editor",
    "roles/pubsub.admin",
    "roles/pubsub.publisher",
    "roles/pubsub.subscriber",
    "roles/pubsub.viewer",
    "roles/secretmanager.secretAccessor",
    "roles/secretmanager.secretVersionAdder",
    "roles/secretmanager.secretVersionManager",
    "roles/secretmanager.viewer",
    "roles/storage.objectAdmin",
    "roles/storage.objectCreator",
    "roles/storage.objectViewer",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.transferAgent",
    "roles/storagetransfer.user",
    "roles/storagetransfer.viewer"
  ]
}

variable "terraform_service_account_for_project" {
  description = "The service account that will be granted administrator permissions at the project level."
  type        = string
}

variable "project_viewer_group" {
  description = "The project level viewer group that would be assigned read-only privileges (with a few exceptions like BQ)"
  type        = string
}

variable "viewer_group_role_assignment" {
  description = "List of roles assigned to the viewer group at the project level"
  type        = list(string)
  default = [
    "roles/bigquery.connectionUser",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataViewer",
    "roles/bigquery.filteredDataViewer",
    "roles/bigquery.jobUser",
    "roles/bigquery.metadataViewer",
    "roles/bigquery.readSessionUser",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/bigquerydatapolicy.maskedReader",
    "roles/bigquerymigration.editor",
    "roles/bigquerymigration.orchestrator",
    "roles/bigquerymigration.translationUser",
    "roles/bigquerymigration.viewer",
    "roles/bigquerymigration.worker",
    "roles/artifactregistry.reader",
    "roles/cloudfunctions.viewer",
    "roles/cloudfunctions.invoker",
    "roles/cloudkms.viewer",
    "roles/cloudsql.instanceUser",
    "roles/cloudsql.viewer",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/compute.viewer",
    "roles/container.clusterViewer",
    "roles/container.viewer",
    "roles/containersecurity.viewer",
    "roles/containeranalysis.occurrences.viewer",
    "roles/containeranalysis.notes.viewer",
    "roles/containeranalysis.notes.occurrences.viewer",
    "roles/datacatalog.entryViewer",
    "roles/datacatalog.viewer",
    "roles/dataproc.viewer",
    "roles/gkebackup.viewer",
    "roles/gkehub.viewer",
    "roles/gkehub.gatewayReader",
    "roles/gkemulticloud.viewer",
    "roles/gkeonprem.viewer",
    "roles/iam.serviceAccountViewer",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/monitoring.alertPolicyViewer",
    "roles/monitoring.dashboardViewer",
    "roles/monitoring.metricsScopesViewer",
    "roles/monitoring.notificationChannelViewer",
    "roles/monitoring.servicesViewer",
    "roles/monitoring.uptimeCheckConfigViewer",
    "roles/osconfig.instanceOSPoliciesComplianceViewer",
    "roles/osconfig.inventoryViewer",
    "roles/osconfig.osPolicyAssignmentReportViewer",
    "roles/osconfig.osPolicyAssignmentViewer",
    "roles/osconfig.patchDeploymentViewer",
    "roles/osconfig.patchJobViewer",
    "roles/osconfig.vulnerabilityReportViewer",
    "roles/pubsub.viewer",
    "roles/secretmanager.viewer",
    "roles/storage.objectViewer",
    "roles/storagetransfer.viewer"
  ]
}

variable "project_id" {
  description = "GCP project id where to grant direct and delegated roles to the users listed in project_administrators."
  type        = string
}

variable "restricted_role_grant" {
  description = "Role that will be granted to the project level terraform service account"
  type        = string
  default     = "roles/resourcemanager.projectIamAdmin"
}
